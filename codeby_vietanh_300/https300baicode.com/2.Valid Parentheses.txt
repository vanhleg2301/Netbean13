Valid Dấu ngoặc đơn
Java
public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        
        for (char c : s.toCharArray()) {
            if (c == '(' || c == '[' || c == '{') {
                stack.push(c); // Đẩy các dấu ngoặc mở vào stack
            } else {
                if (stack.isEmpty()) {
                    return false; // Nếu stack rỗng mà gặp dấu ngoặc đóng, không hợp lệ
                }
                
                char top = stack.pop(); // Lấy dấu ngoặc mở đầu tiên từ stack
                
                if ((c == ')' && top != '(') || (c == ']' && top != '[') || (c == '}' && top != '{')) {
                    return false; // Nếu dấu ngoặc không khớp, không hợp lệ
                }
            }
        }
        
        return stack.isEmpty(); // Nếu sau khi duyệt hết chuỗi mà stack còn phần tử, không hợp lệ
    }

Đề bài
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.